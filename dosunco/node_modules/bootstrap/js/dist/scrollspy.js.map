{"version":3,"sources":["../src/scrollspy.js"],"names":["Util","ScrollSpy","$","NAME","VERSION","DATA_KEY","EVENT_KEY","DATA_API_KEY","JQUERY_NO_CONFLICT","fn","Default","offset","method","target","DefaultType","Event","ACTIVATE","SCROLL","LOAD_DATA_API","ClassName","DROPDOWN_ITEM","DROPDOWN_MENU","NAV_LINK","NAV","ACTIVE","Selector","DATA_SPY","LIST_ITEM","LI","LI_DROPDOWN","NAV_LINKS","DROPDOWN","DROPDOWN_ITEMS","DROPDOWN_TOGGLE","OffsetMethod","OFFSET","POSITION","constructor","element","config","_element","_scrollElement","tagName","window","_config","_getConfig","_selector","_offsets","_targets","_activeTarget","_scrollHeight","on","proxy","_process","refresh","autoMethod","offsetMethod","offsetBase","_getScrollTop","_getScrollHeight","targets","makeArray","map","targetSelector","getSelectorFromElement","offsetWidth","offsetHeight","top","filter","item","sort","a","b","forEach","push","dispose","removeData","off","extend","id","attr","getUID","typeCheckConfig","scrollY","scrollTop","scrollHeight","Math","max","document","body","documentElement","maxScroll","length","_activate","_clear","i","isActiveTarget","undefined","queries","split","selector","$link","join","hasClass","closest","find","addClass","parents","trigger","relatedTarget","removeClass","_jQueryInterface","each","data","Error","scrollSpys","$spy","call","Constructor","noConflict","jQuery"],"mappings":"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","file":"scrollspy.js","sourcesContent":["import Util from './util'\n\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.0.0-alpha.5): scrollspy.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst ScrollSpy = (($) => {\n\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  const NAME               = 'scrollspy'\n  const VERSION            = '4.0.0-alpha.5'\n  const DATA_KEY           = 'bs.scrollspy'\n  const EVENT_KEY          = `.${DATA_KEY}`\n  const DATA_API_KEY       = '.data-api'\n  const JQUERY_NO_CONFLICT = $.fn[NAME]\n\n  const Default = {\n    offset : 10,\n    method : 'auto',\n    target : ''\n  }\n\n  const DefaultType = {\n    offset : 'number',\n    method : 'string',\n    target : '(string|element)'\n  }\n\n  const Event = {\n    ACTIVATE      : `activate${EVENT_KEY}`,\n    SCROLL        : `scroll${EVENT_KEY}`,\n    LOAD_DATA_API : `load${EVENT_KEY}${DATA_API_KEY}`\n  }\n\n  const ClassName = {\n    DROPDOWN_ITEM : 'dropdown-item',\n    DROPDOWN_MENU : 'dropdown-menu',\n    NAV_LINK      : 'nav-link',\n    NAV           : 'nav',\n    ACTIVE        : 'active'\n  }\n\n  const Selector = {\n    DATA_SPY        : '[data-spy=\"scroll\"]',\n    ACTIVE          : '.active',\n    LIST_ITEM       : '.list-item',\n    LI              : 'li',\n    LI_DROPDOWN     : 'li.dropdown',\n    NAV_LINKS       : '.nav-link',\n    DROPDOWN        : '.dropdown',\n    DROPDOWN_ITEMS  : '.dropdown-item',\n    DROPDOWN_TOGGLE : '.dropdown-toggle'\n  }\n\n  const OffsetMethod = {\n    OFFSET   : 'offset',\n    POSITION : 'position'\n  }\n\n\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  class ScrollSpy {\n\n    constructor(element, config) {\n      this._element       = element\n      this._scrollElement = element.tagName === 'BODY' ? window : element\n      this._config        = this._getConfig(config)\n      this._selector      = `${this._config.target} ${Selector.NAV_LINKS},`\n                          + `${this._config.target} ${Selector.DROPDOWN_ITEMS}`\n      this._offsets       = []\n      this._targets       = []\n      this._activeTarget  = null\n      this._scrollHeight  = 0\n\n      $(this._scrollElement).on(Event.SCROLL, $.proxy(this._process, this))\n\n      this.refresh()\n      this._process()\n    }\n\n\n    // getters\n\n    static get VERSION() {\n      return VERSION\n    }\n\n    static get Default() {\n      return Default\n    }\n\n\n    // public\n\n    refresh() {\n      let autoMethod = this._scrollElement !== this._scrollElement.window ?\n        OffsetMethod.POSITION : OffsetMethod.OFFSET\n\n      let offsetMethod = this._config.method === 'auto' ?\n        autoMethod : this._config.method\n\n      let offsetBase = offsetMethod === OffsetMethod.POSITION ?\n        this._getScrollTop() : 0\n\n      this._offsets = []\n      this._targets = []\n\n      this._scrollHeight = this._getScrollHeight()\n\n      let targets = $.makeArray($(this._selector))\n\n      targets\n        .map((element) => {\n          let target\n          let targetSelector = Util.getSelectorFromElement(element)\n\n          if (targetSelector) {\n            target = $(targetSelector)[0]\n          }\n\n          if (target && (target.offsetWidth || target.offsetHeight)) {\n            // todo (fat): remove sketch reliance on jQuery position/offset\n            return [\n              $(target)[offsetMethod]().top + offsetBase,\n              targetSelector\n            ]\n          }\n          return null\n        })\n        .filter((item)  => item)\n        .sort((a, b)    => a[0] - b[0])\n        .forEach((item) => {\n          this._offsets.push(item[0])\n          this._targets.push(item[1])\n        })\n    }\n\n    dispose() {\n      $.removeData(this._element, DATA_KEY)\n      $(this._scrollElement).off(EVENT_KEY)\n\n      this._element       = null\n      this._scrollElement = null\n      this._config        = null\n      this._selector      = null\n      this._offsets       = null\n      this._targets       = null\n      this._activeTarget  = null\n      this._scrollHeight  = null\n    }\n\n\n    // private\n\n    _getConfig(config) {\n      config = $.extend({}, Default, config)\n\n      if (typeof config.target !== 'string') {\n        let id = $(config.target).attr('id')\n        if (!id) {\n          id = Util.getUID(NAME)\n          $(config.target).attr('id', id)\n        }\n        config.target = `#${id}`\n      }\n\n      Util.typeCheckConfig(NAME, config, DefaultType)\n\n      return config\n    }\n\n    _getScrollTop() {\n      return this._scrollElement === window ?\n          this._scrollElement.scrollY : this._scrollElement.scrollTop\n    }\n\n    _getScrollHeight() {\n      return this._scrollElement.scrollHeight || Math.max(\n        document.body.scrollHeight,\n        document.documentElement.scrollHeight\n      )\n    }\n\n    _process() {\n      let scrollTop    = this._getScrollTop() + this._config.offset\n      let scrollHeight = this._getScrollHeight()\n      let maxScroll    = this._config.offset\n        + scrollHeight\n        - this._scrollElement.offsetHeight\n\n      if (this._scrollHeight !== scrollHeight) {\n        this.refresh()\n      }\n\n      if (scrollTop >= maxScroll) {\n        let target = this._targets[this._targets.length - 1]\n\n        if (this._activeTarget !== target) {\n          this._activate(target)\n        }\n      }\n\n      if (this._activeTarget && scrollTop < this._offsets[0]) {\n        this._activeTarget = null\n        this._clear()\n        return\n      }\n\n      for (let i = this._offsets.length; i--;) {\n        let isActiveTarget = this._activeTarget !== this._targets[i]\n            && scrollTop >= this._offsets[i]\n            && (this._offsets[i + 1] === undefined ||\n                scrollTop < this._offsets[i + 1])\n\n        if (isActiveTarget) {\n          this._activate(this._targets[i])\n        }\n      }\n    }\n\n    _activate(target) {\n      this._activeTarget = target\n\n      this._clear()\n\n      let queries = this._selector.split(',')\n      queries     = queries.map((selector) => {\n        return `${selector}[data-target=\"${target}\"],` +\n               `${selector}[href=\"${target}\"]`\n      })\n\n      let $link = $(queries.join(','))\n\n      if ($link.hasClass(ClassName.DROPDOWN_ITEM)) {\n        $link.closest(Selector.DROPDOWN).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE)\n        $link.addClass(ClassName.ACTIVE)\n      } else {\n        // todo (fat) this is kinda sus...\n        // recursively add actives to tested nav-links\n        $link.parents(Selector.LI).find(Selector.NAV_LINKS).addClass(ClassName.ACTIVE)\n      }\n\n      $(this._scrollElement).trigger(Event.ACTIVATE, {\n        relatedTarget: target\n      })\n    }\n\n    _clear() {\n      $(this._selector).filter(Selector.ACTIVE).removeClass(ClassName.ACTIVE)\n    }\n\n\n    // static\n\n    static _jQueryInterface(config) {\n      return this.each(function () {\n        let data    = $(this).data(DATA_KEY)\n        let _config = typeof config === 'object' && config || null\n\n        if (!data) {\n          data = new ScrollSpy(this, _config)\n          $(this).data(DATA_KEY, data)\n        }\n\n        if (typeof config === 'string') {\n          if (data[config] === undefined) {\n            throw new Error(`No method named \"${config}\"`)\n          }\n          data[config]()\n        }\n      })\n    }\n\n\n  }\n\n\n  /**\n   * ------------------------------------------------------------------------\n   * Data Api implementation\n   * ------------------------------------------------------------------------\n   */\n\n  $(window).on(Event.LOAD_DATA_API, () => {\n    let scrollSpys = $.makeArray($(Selector.DATA_SPY))\n\n    for (let i = scrollSpys.length; i--;) {\n      let $spy = $(scrollSpys[i])\n      ScrollSpy._jQueryInterface.call($spy, $spy.data())\n    }\n  })\n\n\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n\n  $.fn[NAME]             = ScrollSpy._jQueryInterface\n  $.fn[NAME].Constructor = ScrollSpy\n  $.fn[NAME].noConflict  = function () {\n    $.fn[NAME] = JQUERY_NO_CONFLICT\n    return ScrollSpy._jQueryInterface\n  }\n\n  return ScrollSpy\n\n})(jQuery)\n\nexport default ScrollSpy\n"]}